; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
	default_envs = ai-thinker-cam-debug ;esp-eye-debug
	boards_dir = ./boards
	src_dir = src
	lib_dir = lib
  
[env]

  lib_deps =
    tzapu/WiFiManager @ ^2.0.17

	build_flags = 
    -D ARDUINO_ARCH_ESP32
    ; pick one of the three
    -D CAMERA_MULTICLIENT_QUEUE
    ; -D CAMERA_MULTICLIENT_TASK
    ; -D CAMERA_ALL_FRAMES
    ; Includes for the ESP-camera components
    -I components/esp32-camera/sensors
    -I components/esp32-camera/sensors/private_include
    -I components/esp32-camera/conversions/include
    -I components/esp32-camera/conversions/private_include
    -I components/esp32-camera/driver/include
    -I components/esp32-camera/driver/private_include
    -I components/esp32-camera/target/jpeg_include
    -I components/esp32-camera/target/private_include



    ; Frame sizes:
    ;     FRAMESIZE_96X96,    // 96x96
    ;     FRAMESIZE_QQVGA,    // 160x120
    ;     FRAMESIZE_QCIF,     // 176x144
    ;     FRAMESIZE_HQVGA,    // 240x176
    ;     FRAMESIZE_240X240,  // 240x240
    ;     FRAMESIZE_QVGA,     // 320x240
    ;     FRAMESIZE_CIF,      // 400x296
    ;     FRAMESIZE_HVGA,     // 480x320
    ;     FRAMESIZE_VGA,      // 640x480
    ;     FRAMESIZE_SVGA,     // 800x600
    ;     FRAMESIZE_XGA,      // 1024x768
    ;     FRAMESIZE_HD,       // 1280x720
    ;     FRAMESIZE_SXGA,     // 1280x1024
    ;     FRAMESIZE_UXGA,     // 1600x1200

[env:ai-thinker-cam]
; ESP32-CAM AI-Thinker
; https://docs.platformio.org/en/stable/boards/espressif32/esp32cam.html'
; https://docs.ai-thinker.com/en/esp32
; board has 4MB PSRAM
  build_type = release
  platform = espressif32
  framework = arduino, espidf
  board = ai-thinker-cam
  board_build.partitions = ai-thinker-cam.csv 

  lib_deps = 
    ${env.lib_deps}

  lib_ldf_mode = deep+

	upload_speed = 921600
	monitor_speed = 115200

	build_flags = 
    ${env.build_flags}
    -D CAMERA_MODEL_AI_THINKER
    -D FRAME_SIZE=FRAMESIZE_VGA
    -D FPS=10
    -D WSINTERVAL=100
    -D MAX_CLIENTS=10
    -D JPEG_QUALITY=16 ; 0-63 lower means higher quality
    -D LOG_LEVEL=0
    -D DISABLE_LOGGING
    -D WM_NODEBUG


[env:ai-thinker-cam-debug]
; ESP32-CAM AI-Thinker
; https://docs.platformio.org/en/stable/boards/espressif32/esp32cam.html'
; https://docs.ai-thinker.com/en/esp32
; board has 4MB PSRAM
  build_type = debug
  platform = espressif32
  framework = arduino, espidf
  board = ai-thinker-cam
  board_build.partitions = ai-thinker-cam.csv 

  lib_deps = 
    ${env.lib_deps}

  lib_ldf_mode = deep+

	upload_speed = 921600
	monitor_speed = 115200

	build_flags = 
    ${env.build_flags}
    -D CAMERA_MODEL_AI_THINKER
    -D FRAME_SIZE=FRAMESIZE_VGA
    -D FPS=10
    -D WSINTERVAL=100
    -D MAX_CLIENTS=10
    -D JPEG_QUALITY=16 ; 0-63 lower means higher quality
    -D LOG_LEVEL=6
    -D BENCHMARK


[env:esp-eye]
; Espressif ESP-EYE
; https://github.com/espressif/esp-who/blob/master/docs/en/get-started/ESP-EYE_Getting_Started_Guide.md
; https://www.espressif.com/en/products/devkits/esp-eye/resources
; board has 8MB PSRAM
  build_type = release
  platform = espressif32
  framework = arduino, espidf
  board = esp-eye
  board_build.partitions = esp-eye.csv 
	
  lib_deps = 
    ${env.lib_deps}

  lib_ldf_mode = deep+

	upload_speed = 921600
	monitor_speed = 115200

	build_flags = 
    ${env.build_flags}
    -D CAMERA_MODEL_ESP_EYE
    ; -D FLIP_VERTICALLY
    -D FRAME_SIZE=FRAMESIZE_VGA
    -D FPS=10
    -D WSINTERVAL=100
    -D MAX_CLIENTS=10
    -D JPEG_QUALITY=24 ; 0-63 lower means higher quality
    -D LOG_LEVEL=0
    -D DISABLE_LOGGING
    -D WM_NODEBUG


[env:esp-eye-debug]
; Espressif ESP-EYE
; https://github.com/espressif/esp-who/blob/master/docs/en/get-started/ESP-EYE_Getting_Started_Guide.md
; https://www.espressif.com/en/products/devkits/esp-eye/resources
; board has 8MB PSRAM
  build_type = debug
  platform = espressif32
  framework = arduino, espidf
  board = esp-eye
  board_build.partitions = esp-eye.csv 

  lib_deps = 
    ${env.lib_deps}

  lib_ldf_mode = deep+

	upload_speed = 921600
	monitor_speed = 115200

	build_flags = 
    ${env.build_flags}
    -D CAMERA_MODEL_ESP_EYE
    -D FLIP_VERTICALLY
    -D FRAME_SIZE=FRAMESIZE_SVGA
    -D FPS=10
    -D WSINTERVAL=100
    -D MAX_CLIENTS=10
    -D JPEG_QUALITY=32 ; 0-63 lower means higher quality
    -D LOG_LEVEL=6
    -D WM_DEBUG_LEVEL=WM_DEBUG_VERBOSE
    -D BENCHMARK


; EXAMPLE of the additional board configuration
; This board has not been tested

[env:freenove-wrover-cam]
; Freenove ESP32-Wrover CAM Board
; https://randomnerdtutorials.com/getting-started-freenove-esp32-wrover-cam/
; board has 4MB PSRAM
  build_type = release
  platform = espressif32
  framework = arduino, espidf
  ; create a JSON board file for this board in the ./boards folder
  board = freenove-wrover-cam
  ; create a CSV partition file for this board in the root project folder
	board_build.partitions = freenove-wrover-cam.csv 

  lib_deps = 
    ${env.lib_deps}
    
  lib_ldf_mode = deep+

	upload_speed = 921600
	monitor_speed = 115200
  
	build_flags = 
    ${env.build_flags}
    -D CAMERA_MODEL_WROVER_KIT
    ; -D FLIP_VERTICALLY
    -D FRAME_SIZE=FRAMESIZE_HVGA
    -D FPS=5
    -D WSINTERVAL=100
    -D MAX_CLIENTS=10
    -D JPEG_QUALITY=24 ; 0-63 lower means higher quality
    -D LOG_LEVEL=0
    -D DISABLE_LOGGING